"""
Django settings for blogtales project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from decouple import config, Csv

# import re
import re


from django.conf.global_settings import INTERNAL_IPS
from unipath import Path
#import dj_database_url

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = Path(__file__).parent

SECRET_KEY = config('SECRET_KEY')
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())
DEBUG = config('DEBUG', default=True, cast=bool)

EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_SSL = True
DATABASES = {
    'default': {
        'ENGINE': config('ENGINE'),
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', cast=int),
    }
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'django_extensions',
    'accounts',
    'home',
    'search',
    'blog',
    'colorblock',
    'thewall',

    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.contrib.routable_page',
    'wagtail.contrib.styleguide',
    'wagtail.contrib.modeladmin',
    'wagtail.contrib.settings',
    'wagtailmenus',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtailcodeblock',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.core',
    'ckeditor',
    'ckeditor_uploader',

    'tinymce',
    'modelcluster',
    'taggit',
    'taggit_templatetags2',
    'treebeard',
    'threadedcomments',
    'fluent_comments',  # must be before django_comments
    'crispy_forms',
    'django_comments',
    'filebrowser',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    #    'debug_toolbar',
    #    'debugtools',
    'social_django',


]


MIDDLEWARE = [
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',

    'wagtail.core.middleware.SiteMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',

    'social_django.middleware.SocialAuthExceptionMiddleware',

]

ROOT_URLCONF = 'blogtales.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # 'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'wagtailmenus.context_processors.wagtailmenus',
                'django.template.context_processors.static',
                'django.template.context_processors.media',

                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',

                # """  ],
                # 'builtins': [                                     # Add this section
                #   "debugtools.templatetags.debugtools_tags",   # Add this line """
            ],

        },
    },
]

WSGI_APPLICATION = 'blogtales.wsgi.application'

# user auth configs
LOGIN_URL = 'account/login'
LOGOUT_URL = 'account/logout'
LOGIN_REDIRECT_URL = '/brickmaker/'
LOGOUT_REDIRECT_URL = '/'

# config for social auth library
SOCIAL_AUTH_POSTGRES_JSONFIELD = True

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.instagram.InstagramOAuth2',


    'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
#SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [...]

SOCIAL_AUTH_FACEBOOK_KEY = ''
SOCIAL_AUTH_FACEBOOK_SECRET = ''
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'locale': 'us_US',
    'fields': 'id, name, email, age_range'
}

SOCIAL_AUTH_INSTAGRAM_KEY = ''
SOCIAL_AUTH_INSTAGRAM_SECRET = ''
SOCIAL_AUTH_INSTAGRAM_AUTH_EXTRA_ARGUMENTS = {
    'scope': 'likes comments relationships'}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

STATICFILES_DIRS = [
    os.path.join(PROJECT_DIR, 'static'),
]

# ManifestStaticFilesStorage is recommended in production, to prevent outdated
# Javascript / CSS assets being served from cache (e.g. after a Wagtail upgrade).
# See https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/#manifeststaticfilesstorage
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

INTERNAL_IPS = config('INTERNAL_IPS', cast=Csv())

# Wagtail settings

WAGTAIL_SITE_NAME = config('SITE_NAME')
SITE_NAME = config('SITE_NAME')
# Base URL to use when referring to full URLs within the Wagtail admin backend -
# e.g. in notification emails. Don't include '/admin' or a trailing slash
BASE_URL = 'https://nuljonapp.pythonanywhere.com'

IGNORABLE_404_URLS = [
    re.compile(r'^/apple-touch-icon.*\.png$'),
    re.compile(r'^/favicon.ico$'),
    re.compile(r'^/robots.txt$'),
    #        re.compile(r'^/phpmyadmin/'),
    #        re.compile(r'\.(cgi|php|pl)$'),
]

# wagtail image processing - features rely on open cv2 nd numpy
WAGTAILIMAGES_FEATURE_DETECTION_ENABLED = True

WAGTAIL_CODE_BLOCK_LANGUAGES = (
    ('bash', 'Bash/Shell'),
    ('css', 'CSS'),
    ('diff', 'diff'),
    ('html', 'HTML'),
    ('javascript', 'Javascript'),
    ('json', 'JSON'),
    ('python', 'Python'),
    ('scss', 'SCSS'),
    ('yaml', 'YAML'),
    ('cpp', 'C++')
)

# configure TAGS and TAG CLOUD

TAGGIT_CASE_INSENSITIVE = True
# tag cloud limit default is 10
TAGGIT_LIMIT = 150
# tag cloud order by default is name
TAGGIT_TAG_CLOUD_ORDER_BY = '-num_times'


####################### configure COMMENTS-FRAMEWORK  ######################

# fluent-comments default config values
# AKISMET_API_KEY = None
# AKISMET_BLOG_URL = None
# AKISMET_IS_TEST = False
# CRISPY_TEMPLATE_PACK = 'bootstrap'
# FLUENT_COMMENTS_REPLACE_ADMIN = True
# Akismet spam fighting
# FLUENT_CONTENTS_USE_AKISMET = bool(AKISMET_API_KEY)
# FLUENT_COMMENTS_AKISMET_ACTION = 'soft_delete'
# Moderation
# FLUENT_COMMENTS_DEFAULT_MODERATOR = 'default'
# FLUENT_COMMENTS_CLOSE_AFTER_DAYS = None
# FLUENT_COMMENTS_MODERATE_BAD_WORDS = ()
# FLUENT_COMMENTS_MODERATE_AFTER_DAYS = None
# FLUENT_COMMENTS_USE_EMAIL_NOTIFICATION = True
# FLUENT_COMMENTS_MULTIPART_EMAILS = False
# Form layouts
# FLUENT_COMMENTS_FIELD_ORDER = ()
# FLUENT_COMMENTS_EXCLUDE_FIELDS = ()
# FLUENT_COMMENTS_FORM_CLASS = None
# FLUENT_COMMENTS_FORM_CSS_CLASS = 'comments-form form-horizontal'
# FLUENT_COMMENTS_LABEL_CSS_CLASS = 'col-sm-2'
# FLUENT_COMMENTS_FIELD_CSS_CLASS = 'col-sm-10'
# Compact style settings
# FLUENT_COMMENTS_COMPACT_FIELDS = ('name', 'email', 'url')
# FLUENT_COMMENTS_COMPACT_GRID_SIZE = 12
#FLUENT_COMMENTS_COMPACT_COLUMN_CSS_CLASS = "col-sm-{size}"
# end fluent-comments default config values

COMMENTS_APP = 'fluent_comments'

# config fluent_comments FORM (*default)

# FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.DefaultCommentForm'*
FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.CompactCommentForm'
# replace the labels with placeholders
# FLUENT_COMMENTS_FORM_CLASS = 'fluent_comments.forms.CompactLabelsCommentForm'

# assign or override classes to customize styles
# FLUENT_COMMENTS_FORM_CSS_CLASS = 'comments-form form-horizontal'*
FLUENT_COMMENTS_LABEL_CSS_CLASS = 'col-sm-2'
# FLUENT_COMMENTS_FIELD_CSS_CLASS = 'col-sm-10'*

# Optional settings for the compact style:
FLUENT_COMMENTS_COMPACT_FIELDS = ('comment', 'name')
FLUENT_COMMENTS_COMPACT_GRID_SIZE = 12
FLUENT_COMMENTS_COMPACT_COLUMN_CSS_CLASS = 'col-sm-10'

# display fields to render visible in order deisired
# FLUENT_COMMENTS_FIELD_ORDER = ('comment', 'name', 'email', 'url')
FLUENT_COMMENTS_FIELD_ORDER = ('comment', 'name')

# alternatively, hide fields from rendeering
# FLUENT_COMMENTS_EXCLUDE_FIELDS = ('email', 'url')

# crispy forms template pack used by comments and thewall
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# configure DJANGO SITES-FRAMEWORK - required by comments
SITE_ID = 1


####################### configure DJANGO-CKEDITOR  #############

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_RESTRICT_BY_DATE = True
# CKEDITOR_FILEICONS setting that allows overriding the icons used by Gallerific
# CKEDITOR_FILENAME_GENERATOR setting which allows specifying a callable which mangles
THUMBNAIL_SIZE = (100, 100)
IMAGE_QUALITY = 90

CKEDITOR_CONFIGS = {
    'default': {
        'language': 'en',
        'skin': 'moono-dark',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'clipboard', 'items': [
                'Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste']},
            {'name': 'links', 'items': ['Link']},
            {'name': 'insert', 'items': [
                'EasyImageUpload', 'Youtube', 'Embed', 'Table', 'HorizontalRule', 'SpecialChar', 'Uploadcare', 'Iframe']},
            {'name': 'document', 'items': ['Source']},
            {'name': 'basicstyles', 'items': [
                'Bold', 'Italic', 'Underline', 'Strike', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph', 'items': [
                'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote']},
            {'name': 'styles', 'items': [
                'Styles', 'Format', 'Font', 'FontSize',  'TextColor', 'BGColor']}
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        'width': '100%',
        'uploadcare': {
            'publicKey': '30b5439d8dd842ee01b4'
        },
        #cloud services is ckeditor easyimage cdn - needs to be replaced with custom django backend to store and serve responsive images
        'cloudServices_tokenUrl': 'https://39394.cke-cs.com/token/dev/1FM16jFrIEY5bjhtMIQmaOfof7DYA7KCo20ZEkexrze8wC44OlNiv28qdO0S',
        'cloudServices_uploadUrl': 'https://39394.cke-cs.com/easyimage/upload/',

        # for pasted embed objects
        'embed_provider': 'https://noembed.com/embed?url={url}&callback={callback}',

        'allowedContent': True,
        # 'toolbargroups': [{'name': 'clipboard', 'groups': ['undo', 'clipboard']},
        'toolbarLocation': 'bottom',
        # 'hideDialogFields': 'image:info:txtUrl',
        # 'removeButtons' : 'Underline,Subscript,PasteText,PasteFromWord',
        'removePlugins': 'image',
        'extraPlugins': ','.join([
            'uploadimage',  # the upload image feature
            # your extra plugins here
            'cloudservices',
            'easyimage',
            # confighelper -  allows removeDialogFields="image:info:txtBorder;image:info:txtHSpace"; and hideDialogFields="image:info:htmlPreview";
            # also allows dialog default value setting dialogFieldsDefaultValues =
            # {
            #     image:
            #     {
            #         advanced:
            #	{
            #                         txtGenClass: 'myClass',
            #                         txtGenTitle: 'Image title'
            #	}
            #    }
            # }
            'confighelper',
            'devtools',

        ])
    }
}


# configure DJANGO FILEBROWSER for tinymce

# Main FileBrowser Directory. Leave empty in order to
# browse all files and folders within a storage location:
FILEBROWSER_DIRECTORY = "uploads/"  # default


# Directory to save image versions (and thumbnails). If no directory is
# given, versions are stored at the same location as the original image:
FILEBROWSER_VERSIONS_BASEDIR = "_versions"

TINYMCE_DEFAULT_CONFIG = {
    'selector': 'textarea',
    'theme': 'modern',
    'plugins': 'autolink link image imagetools emoticons preview codesample contextmenu table code lists textcolor colorpicker media',
    'toolbar1': 'formatselect forecolor backcolor | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist | outdent indent | table | link image media emoticons codesample | preview code',
    'contextmenu': 'formats | link image ',
    'menubar': 'file edit insert view format table tools help',
    'inline': False,
    'statusbar': True,
    'width': '90%',
    'height': 360,
}
